(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{236:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"extension-anatomy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extension-anatomy","aria-hidden":"true"}},[t._v("#")]),t._v(" Extension Anatomy")]),t._v(" "),s("p",[t._v("In the last topic, you were able to get a basic extension running. How does it work under the hood?")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("Hello World")]),t._v(" extension does 3 things:")]),t._v(" "),s("ul",[s("li",[t._v("Registers the "),s("a",{attrs:{href:"/api/references/activation-events#onCommand"}},[s("code",[t._v("onCommand")])]),t._v(" "),s("a",{attrs:{href:"/api/references/activation-events"}},[s("strong",[t._v("Activation Event")])]),t._v(": "),s("code",[t._v("onCommand:extension.helloWorld")]),t._v(", so the extension becomes activated when user runs the "),s("code",[t._v("Hello World")]),t._v(" command.")]),t._v(" "),s("li",[t._v("Uses the "),s("a",{attrs:{href:"/api/references/contribution-points#contributes.commands"}},[s("code",[t._v("contributes.commands")])]),t._v(" "),s("a",{attrs:{href:"/api/references/contribution-points"}},[s("strong",[t._v("Contribution Point")])]),t._v(" to make the command "),s("code",[t._v("Hello World")]),t._v(" available in the Command Palette, and bind it to a command ID "),s("code",[t._v("extension.helloWorld")]),t._v(".")]),t._v(" "),s("li",[t._v("Uses the "),s("a",{attrs:{href:"/api/references/vscode-api#commands.registerCommand"}},[s("code",[t._v("commands.registerCommand")])]),t._v(" "),s("a",{attrs:{href:"/api/references/vscode-api"}},[s("strong",[t._v("VS Code API")])]),t._v(" to bind a function to the registered command ID "),s("code",[t._v("extension.helloWorld")]),t._v(".")])]),t._v(" "),s("p",[t._v("Understanding these three concepts is crucial to writing extensions in VS Code:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"/api/references/activation-events"}},[s("strong",[t._v("Activation Events")])]),t._v(": events upon which your extension becomes active.")]),t._v(" "),s("li",[s("a",{attrs:{href:"/api/references/contribution-points"}},[s("strong",[t._v("Contribution Points")])]),t._v(": static declarations that you make in the "),s("code",[t._v("package.json")]),t._v(" "),s("a",{attrs:{href:"#extension-manifest"}},[t._v("Extension Manifest")]),t._v(" to extend VS Code.")]),t._v(" "),s("li",[s("a",{attrs:{href:"/api/references/vscode-api"}},[s("strong",[t._v("VS Code API")])]),t._v(": a set of JavaScript API that you can invoke in your extension code.")])]),t._v(" "),s("p",[t._v("In general, your extension would use a combination of Contribution Points and VS Code API to extend VS Code's functionality. The "),s("a",{attrs:{href:"/api/extension-capabilities/overview"}},[t._v("Extension Capabilities Overview")]),t._v(" topic helps you find the right Contribution Point and VS Code API for your extension.")]),t._v(" "),s("p",[t._v("Let's take a closer look of "),s("code",[t._v("Hello World")]),t._v(" sample's source code and see how these concepts apply to it.")]),t._v(" "),s("h2",{attrs:{id:"extension-file-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extension-file-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" Extension File Structure")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── .vscode\n│   ├── launch.json     // Config for launching and debugging the extension\n│   └── tasks.json      // Config for build task that compiles TypeScript\n├── .gitignore          // Ignore build output and node_modules\n├── README.md           // Readable description of your extension's functionality\n├── src\n│   └── extension.ts    // Extension source code\n├── package.json        // Extension manifest\n├── tsconfig.json       // TypeScript configuration\n")])])]),s("p",[t._v("You can read more about the configuration files:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("launch.json")]),t._v(" used to configure VS Code "),s("a",{attrs:{href:"/docs/editor/debugging"}},[t._v("Debugging")])]),t._v(" "),s("li",[s("code",[t._v("tasks.json")]),t._v(" for defining VS Code "),s("a",{attrs:{href:"/docs/editor/tasks"}},[t._v("Tasks")])]),t._v(" "),s("li",[s("code",[t._v("tsconfig.json")]),t._v(" consult the TypeScript "),s("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Handbook"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("However, let's focus on "),s("code",[t._v("package.json")]),t._v(" and "),s("code",[t._v("extensions.ts")]),t._v(", which are essential to understanding the "),s("code",[t._v("Hello World")]),t._v(" extension.")]),t._v(" "),s("h3",{attrs:{id:"extension-manifest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extension-manifest","aria-hidden":"true"}},[t._v("#")]),t._v(" Extension Manifest")]),t._v(" "),s("p",[t._v("Each VS Code extension must have a "),s("code",[t._v("package.json")]),t._v(" as its "),s("a",{attrs:{href:"/api/references/extension-manifest"}},[t._v("Extension Manifest")]),t._v(". The "),s("code",[t._v("package.json")]),t._v(" contains a mix of Node.js fields such as "),s("code",[t._v("scripts")]),t._v(" and "),s("code",[t._v("dependencies")]),t._v(" and VS Code specific fields such as "),s("code",[t._v("publisher")]),t._v(", "),s("code",[t._v("activationEvents")]),t._v(" and "),s("code",[t._v("contributes")]),t._v(". You can find description of all VS Code specific fields in "),s("a",{attrs:{href:"/api/references/extension-manifest"}},[t._v("Extension Manifest Reference")]),t._v(". Here are some most important fields:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("name")]),t._v(" and "),s("code",[t._v("publisher")]),t._v(": VS Code uses "),s("code",[t._v("<publisher>.<name>")]),t._v(" as a unique ID for the extension. For example, the Hello World sample has the ID "),s("code",[t._v("vscode-samples.helloworld-sample")]),t._v(". VS Code uses the ID to uniquely identify your extension")]),t._v(" "),s("li",[s("code",[t._v("main")]),t._v(": The extension entry point.")]),t._v(" "),s("li",[s("code",[t._v("activationEvents")]),t._v(" and "),s("code",[t._v("contributes")]),t._v(": "),s("a",{attrs:{href:"/api/references/activation-events"}},[t._v("Activation Events")]),t._v(" and "),s("a",{attrs:{href:"/api/references/contribution-points"}},[t._v("Contribution Points")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("engines.vscode")]),t._v(": This specifies the minimum version of VS Code API that the extension depends on.")]),t._v(" "),s("li",[t._v("The "),s("code",[t._v("postinstall")]),t._v(" script: This would install the 1.34.0 version of VS Code API as specified in "),s("code",[t._v("engines.vscode")]),t._v(". Once the "),s("code",[t._v("vscode.d.ts")]),t._v(" file is downloaded to "),s("code",[t._v("node_modules/vscode/vscode.d.ts")]),t._v(", you will get IntelliSense, jump to definition and error checking for all usage of VS Code API.")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld-sample"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"displayName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld-sample"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HelloWorld example for VS Code"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publisher"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vscode-samples"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"repository"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://github.com/Microsoft/vscode-extension-samples/helloworld-sample"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"engines"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.34.0"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"categories"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Other"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"activationEvents"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onCommand:extension.helloWorld"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./out/extension.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contributes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commands"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"command"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extension.helloWorld"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode:prepublish"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run compile"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compile"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc -p ./"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"watch"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc -watch -p ./"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"postinstall"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node ./node_modules/vscode/bin/install"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"devDependencies"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@types/node"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^8.10.25"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@types/vscode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.34.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tslint"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^5.16.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^3.4.5"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"extension-entry-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extension-entry-file","aria-hidden":"true"}},[t._v("#")]),t._v(" Extension Entry File")]),t._v(" "),s("p",[t._v("The extension entry file exports two functions, "),s("code",[t._v("activate")]),t._v(" and "),s("code",[t._v("deactivate")]),t._v(". "),s("code",[t._v("activate")]),t._v(" is executed when your registered "),s("strong",[t._v("Activation Event")]),t._v(" happens. "),s("code",[t._v("deactivate")]),t._v(" gives you a chance to clean up before your extension becomes deactivated.")]),t._v(" "),s("p",[t._v("The "),s("a",{attrs:{href:"https://www.npmjs.com/package/vscode",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("vscode")]),s("OutboundLink")],1),t._v(" module contains a script located at "),s("code",[t._v("node ./node_modules/vscode/bin/install")]),t._v(". The script pulls the VS Code API definition file depending on the "),s("code",[t._v("engines.vscode")]),t._v(" field in "),s("code",[t._v("package.json")]),t._v(". After running the script, you would get IntelliSense, jump to definition and other TypeScript language features in your code.")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The module 'vscode' contains the VS Code extensibility API")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import the module and reference it with the alias vscode in your code below")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" vscode "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vscode'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this method is called when your extension is activated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// your extension is activated the very first time the command is executed")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("activate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExtensionContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use the console to output diagnostic information (console.log) and errors (console.error)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This line of code will only be executed once when your extension is activated")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Congratulations, your extension \"helloworld-sample\" is now active!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The command has been defined in the package.json file")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now provide the implementation of the command with registerCommand")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The commandId parameter must match the command field in package.json")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" disposable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'extension.helloWorld'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The code you place here will be executed every time your command is executed")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Display a message box to the user")]),t._v("\n    vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInformationMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscriptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("disposable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this method is called when your extension is deactivated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deactivate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);
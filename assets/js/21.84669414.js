(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{243:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"icon-theme"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#icon-theme","aria-hidden":"true"}},[t._v("#")]),t._v(" Icon Theme")]),t._v(" "),s("p",[t._v("Visual Studio Code displays icons next to filenames throughout its UI, and extensions can contribute new sets of file icons that users can choose from.")]),t._v(" "),s("h2",{attrs:{id:"adding-a-new-icon-theme"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-a-new-icon-theme","aria-hidden":"true"}},[t._v("#")]),t._v(" Adding a new Icon Theme")]),t._v(" "),s("p",[t._v("You can create your own icon theme from icons (preferably SVG) and from icon fonts. As example, check out the two built-in themes: "),s("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/theme-defaults",target:"_blank",rel:"noopener noreferrer"}},[t._v("Minimal"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/theme-seti",target:"_blank",rel:"noopener noreferrer"}},[t._v("Seti"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("To begin, create a VS Code extension and add the "),s("code",[t._v("iconTheme")]),t._v(" contribution point.")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contributes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iconThemes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"turtles"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"label"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Turtles"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./fileicons/turtles-icon-theme.json"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("id")]),t._v(" is the identifier for the icon theme. It is currently only used internally. In the future, it might be used in the settings, so make it unique but also readable. "),s("code",[t._v("label")]),t._v(" is shown in the icon theme picker drop-down. The "),s("code",[t._v("path")]),t._v(" points to a file in the extension that defines the icon set. If your icon set name follows the "),s("code",[t._v("*icon-theme.json")]),t._v(" name scheme, you will get completion support and hovers in VS Code.")]),t._v(" "),s("h3",{attrs:{id:"icon-set-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#icon-set-file","aria-hidden":"true"}},[t._v("#")]),t._v(" Icon Set File")]),t._v(" "),s("p",[t._v("The icon set file is a JSON file consisting of file icon associations and icon definitions.")]),t._v(" "),s("p",[t._v("An icon association maps a file type ('file', 'folder', 'json-file'...) to an icon definition. Icon definitions define where the icon is located: That can be an image file or also glyph in a font.")]),t._v(" "),s("h3",{attrs:{id:"icon-definitions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#icon-definitions","aria-hidden":"true"}},[t._v("#")]),t._v(" Icon definitions")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("iconDefinitions")]),t._v(" section contains all definitions. Each definition has an id, which will be used to reference the definition. A definition can be referenced also by more than one file association.")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iconDefinitions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_folder_dark"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iconPath"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./images/Folder_16x_inverse.svg"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This icon definition above contains a definition with the identifier "),s("code",[t._v("_folder_dark")]),t._v(".")]),t._v(" "),s("p",[t._v("The following properties are supported:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("iconPath")]),t._v(": When using a svg/png: the path to the image.")]),t._v(" "),s("li",[s("code",[t._v("fontCharacter")]),t._v(": When using a glyph font: The character in the font to use.")]),t._v(" "),s("li",[s("code",[t._v("fontColor")]),t._v(": When using a glyph font: The color to use for the glyph.")]),t._v(" "),s("li",[s("code",[t._v("fontSize")]),t._v(": When using a font: The font size. By default, the size specified in the font specification is used. Should be a relative size (e.g. 150%) to the parent font size.")]),t._v(" "),s("li",[s("code",[t._v("fontId")]),t._v(": When using a font: The id of the font. If not specified, the first font specified in font specification section will be picked.")])]),t._v(" "),s("h3",{attrs:{id:"file-association"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file-association","aria-hidden":"true"}},[t._v("#")]),t._v(" File association")]),t._v(" "),s("p",[t._v("Icons can be associated to folders, folder names, files, file extensions, file names and "),s("a",{attrs:{href:"/api/references/contribution-points#contributes.languages"}},[t._v("language ids")]),t._v(".")]),t._v(" "),s("p",[t._v("Additionally each of these associations can be refined for 'light' and 'highContrast' color themes.")]),t._v(" "),s("p",[t._v("Each file association points to an icon definition.")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_file_dark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"folder"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_folder_dark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"folderExpanded"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_folder_open_dark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"folderNames"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('".vscode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_vscode_folder"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fileExtensions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ini"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_ini_file"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fileNames"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"win.ini"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_win_ini_file"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"languageIds"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ini"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_ini_file"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"light"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"folderExpanded"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_folder_open_light"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"folder"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_folder_light"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_file_light"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fileExtensions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ini"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_ini_file_light"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"highContrast"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("file")]),t._v(" is the default file icon, shown for all files that don't match any extension, filename or language id. Currently all properties defined by the definition of the file icon will be inherited (only relevant for font glyphs, useful for the fontSize).")]),t._v(" "),s("li",[s("code",[t._v("folder")]),t._v(" is the folder icon for collapsed folders, and if "),s("code",[t._v("folderExpanded")]),t._v(" is not set, also for expanded folders. Icons for specific folder names can be associated using the "),s("code",[t._v("folderNames")]),t._v(" property.\nThe folder icon is optional. If not set, no icon will be shown for folder.")]),t._v(" "),s("li",[s("code",[t._v("folderExpanded")]),t._v(" is the folder icon for expanded folders. The expanded folder icon is optional. If not set, the icon defined for "),s("code",[t._v("folder")]),t._v(" will be shown.")]),t._v(" "),s("li",[s("code",[t._v("folderNames")]),t._v(" associates folder names to icons. The key of the set is the folder name, not including any path segments. Patterns or wildcards are not supported. Folder name matching is case insensitive.")]),t._v(" "),s("li",[s("code",[t._v("folderNamesExpanded")]),t._v(" associates folder names to icons for expanded folder. The key of the set is the folder name, not including any path segments. Patterns or wildcards are not supported. Folder name matching is case insensitive.")]),t._v(" "),s("li",[s("code",[t._v("rootFolder")]),t._v(" is the folder icon for collapsed workspace root folders , and if "),s("code",[t._v("rootFolderExpanded")]),t._v(" is not set, also for expanded workspace root folders. If not set, the icon defined for "),s("code",[t._v("folder")]),t._v(" will be shown for workspace root folders.")]),t._v(" "),s("li",[s("code",[t._v("rootFolderExpanded")]),t._v(" is the folder icon for expanded workspace root folders. If not set, the icon defined for "),s("code",[t._v("rootFolder")]),t._v(" will be shown for exanded workspace root folders.")]),t._v(" "),s("li",[s("code",[t._v("languageIds")]),t._v(" associates languages to icons. The key in the set is the language id as defined in the "),s("a",{attrs:{href:"/api/references/contribution-points#contributes.languages"}},[t._v("language contribution point")]),t._v(". The language of a file is evaluated based on the file extensions and file names as defined in the language contribution. Note that the 'first line match' of the language contribution is not considered.")]),t._v(" "),s("li",[s("code",[t._v("fileExtensions")]),t._v(" associates file extensions to icons. The key in the set is the file extension name. The extension name is a file name segment after a dot (not including the dot). File names with multiple dots such as "),s("code",[t._v("lib.d.ts")]),t._v(" can match multiple extensions; 'd.ts' and 'ts'. Extensions are compared case insensitive.")]),t._v(" "),s("li",[s("code",[t._v("fileNames")]),t._v(" associates file names to icons. The key in the set is the full file name, not including any path segments. Patterns or wildcards are not supported. File name matching is case insensitive. A 'fileName' match is the strongest match, and the icon associated to the file name will be preferred over an icon of a matching fileExtension and also of a matching language Id.")])]),t._v(" "),s("p",[t._v("A file extension match is preferred over a language match, but is weaker than a file name match.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("light")]),t._v(" and the "),s("code",[t._v("highContrast")]),t._v(" section have the same file association properties as just listed. They allow to override icons for the corresponding themes.")]),t._v(" "),s("h3",{attrs:{id:"font-definitions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#font-definitions","aria-hidden":"true"}},[t._v("#")]),t._v(" Font definitions")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("fonts")]),t._v(" section lets you declare any number of glyph fonts that you want to use.\nYou can later reference these fonts in the icon definitions. The font declared first will be used as the default if an icon definition does not specify a font id.")]),t._v(" "),s("p",[t._v("Copy the font file into your extension and set the path accordingly.\nIt is recommended to use "),s("a",{attrs:{href:"https://developer.mozilla.org/docs/Web/Guide/WOFF",target:"_blank",rel:"noopener noreferrer"}},[t._v("WOFF"),s("OutboundLink")],1),t._v(" fonts.")]),t._v(" "),s("ul",[s("li",[t._v("Set 'woff' as the format.")]),t._v(" "),s("li",[t._v("the weight property values are defined "),s("a",{attrs:{href:"https://developer.mozilla.org/docs/Web/CSS/font-weight#Values",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("li",[t._v("the style property values are defined "),s("a",{attrs:{href:"https://developer.mozilla.org/docs/Web/CSS/@font-face/font-style#Values",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("li",[t._v("the size should be relative to the font size where the icon is used. Therefore, always use percentage.")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fonts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"turtles-font"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"src"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./turtles.woff"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"format"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"woff"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"weight"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"normal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"style"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"normal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"150%"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iconDefinitions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_file"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fontCharacter"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\E002"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fontColor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#5f8b3b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fontId"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"turtles-font"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"folder-icons-in-file-icon-themes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#folder-icons-in-file-icon-themes","aria-hidden":"true"}},[t._v("#")]),t._v(" Folder icons in File Icon Themes")]),t._v(" "),s("p",[t._v('File Icon themes can instruct the File Explorer not to show the default folder icon (the rotating triangles or "twisties") when the folder icons are good enough to indicate the expansion state of a folder. This mode is enabled by setting '),s("code",[t._v('"hidesExplorerArrows":true')]),t._v(" in the File Icon theme definition file.")])])}),[],!1,null,null,null);e.default=a.exports}}]);